% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/potentials.R
\name{potentials}
\alias{potentials}
\title{Recover the interaction potentials between two given types from a fitted \code{gibbsm} object.}
\usage{
potentials(
  fit,
  type1 = 1,
  type2 = type1,
  how = c("all", "pairs"),
  exclude_same_types = FALSE
)
}
\arguments{
\item{fit}{A fit object returned by a call to \code{gibbsm}.}

\item{type1}{First interacting types. Can be either an integer representing the type index,
or a string representing its label.}

\item{type2}{Second interacting types. Can be either an integer representing the type index,
or a string representing its label.}

\item{how}{Used when \code{type1} and/or \code{type2} are vectors of types, in which case we need to either combine them by pairs
(this assumes that they have the same length) or consider all possible combinations of \code{type1} with \code{type2}.}

\item{exclude_same_types}{Should pairs of potentials involving the same types be excluded from consideration?}
}
\description{
After calling gibbsm, this function allows the user to visualise the fitted
potentials. The function returns an object that can then be printed or plotted.
}
\examples{
set.seed(1)

# Simulate a Poisson point process with two types

configuration <- ppjsdm::rppp(lambda = c(A = 100, B = 100))

# Fit with gibbsm

fit <- ppjsdm::gibbsm(configuration, short_range = list(matrix(0.05, 2, 2), matrix(0.1, 2, 2)), medium_range = matrix(0.2, 2, 2), long_range = matrix(0.3, 2, 2))

plot(ppjsdm::potentials(fit))
plot(ppjsdm::potentials(fit, type1 = "A", type2 = "B"))
plot(ppjsdm::potentials(fit, type1 = c("A", "B"), type2 = c("A", "B")))

# User wants to give names to the potentials

fit <- ppjsdm::gibbsm(configuration, short_range = list(`0.05m potential` = matrix(0.05, 2, 2), `0.1m potential` = matrix(0.1, 2, 2)), medium_range = matrix(0.2, 2, 2), long_range = matrix(0.3, 2, 2))

plot(ppjsdm::potentials(fit))

}
